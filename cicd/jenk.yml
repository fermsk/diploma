apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: diploma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - name: jenkins
        image: jenkins/jenkins
        ports:
          - name: http-port
            containerPort: 8080
          - name: jnlp-port
            containerPort: 50000
        volumeMounts:
          - name: jenkins-vol
            mountPath: /var/jenkins_vol
      volumes:
        - name: jenkins-vol
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30000
  selector:
    app: jenkins
  externalIPs:
    - 158.160.111.8


#---
#kind: StorageClass
#apiVersion: storage.k8s.io/v1
#metadata:
#  name: local-storage
#provisioner: kubernetes.io/no-provisioner
#volumeBindingMode: WaitForFirstConsumer
#---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: jenkins-pv-volume
#  labels:
#    type: local
#spec:
#  storageClassName: local-storage
#  claimRef:
#    name: jenkins-pv-claim
#    namespace: diploma
#  capacity:
#    storage: 1Gi
#  accessModes:
#    - ReadWriteOnce
#  local:
#    path: /var/k8s/mnt
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: jenkins-pv-claim
#  namespace: diploma
#spec:
#  storageClassName: local-storage
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 300Mi
#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: jenkins
#  namespace: diploma
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: jenkins-server
#  template:
#    metadata:
#      labels:
#        app: jenkins-server
#    spec:
#      securityContext:
#            fsGroup: 1000
#            runAsUser: 1000
#      containers:
#        - name: jenkins
#          image: jenkins/jenkins
#          ports:
#            - name: httpport
#              containerPort: 8080
#            - name: jnlpport
#              containerPort: 50000
#          volumeMounts:
#            - name: jenkins-data
#              mountPath: /var/jenkins_home
#      volumes:
#        - name: jenkins-data
#          persistentVolumeClaim:
#              claimName: jenkins-pv-claim

#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: pv-jenk
#  namespace: diploma
#  labels:
#    type: local
#spec:
#  storageClassName: manual
#  capacity:
#    storage: 1Gi
#  accessModes:
#    - ReadWriteOnce
#  hostPath:
#    path: "/var/k8s/mnt"
#
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: jenkvol
#  namespace: diploma
#spec:
#  storageClassName: manual
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 300Mi

#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: jenkins-deployment
#  labels:
#    app: jenkins
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: jenkins
#  template:
#    metadata:
#      labels:
#        app: jenkins
#    spec:
#      securityContext:
#        fsGroup: 1000
#        runAsUser: 0
#      containers:
#      - name: jenkins
#        image: femsk/diploma:1.1
#        ports:
#          - containerPort: 8080
#        volumeMounts:
#          - name: pv-jenk
#            mountPath: /var/jenkins_home
#      volumes:
#        - name: pv-jenk
#          persistentVolumeClaim:
#            claimName: jenkvol
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: serv-jenk
#  namespace: diploma
#  labels:
#      app: jenkins
#spec:
#  type: LoadBalancer
#  ports:
#    - protocol: TCP
#      port: 8080
#      targetPort: 8080
#  externalIPs:
#      - 158.160.111.8
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: serv-jenk-jnlp
#  namespace: diploma
#  labels:
#      app: jenkins
#spec:
#  type: ClusterIP
#  ports:
#    - protocol: TCP
#      port: 50000
#      targetPort: 50000

#---
#kind: Endpoints
#apiVersion: v1
#metadata:
#  name: serv-jenk
#subsets:
#  - addresses:
#      - ip: 10.244.2.37
#    ports:
#      - port: 8080